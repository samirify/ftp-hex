{
	"info": {
		"_postman_id": "2acc443d-cdbb-41a6-9d3c-c5aa856f3e2f",
		"name": "Samirify Ftp Uploader - PHP Hexagonal",
		"description": "# ðŸš€ Get started\n\n`git clone https://samirify-tech@bitbucket.org/samirify/samirify-dt-lvm.git`\n\n`make install`\n\n`make worker`Â >> Run the message broker\n\n## ðŸ”– **How to use the APIs**\n\n#### **The init API:**\n\nIs an endpoint which will return the configuration saved in .env file for use with the Uploader UI.\n\nIt's a simple GET request that you could test by clicking the init > Send button ({{base_url}}/init)\n\n#### **Upload files from Postman:**\n\nYou could use the Upload files endpoind and post files directly from the Body > form-data section.\n\n#### **Upload a whole folder:**\n\nJust set the files_path to '/your-folder-name'\n\nThis currently works for folders located inside the applications' app folder, as it'll look for relative folders inside the Docker root!\n\nAnother way, would be to use HTML form (see the app/uploader/index.html file) and then the system will extract the folder name from the $_FILES' object full_path.\n\n```\n{\n    \"files_path\": \"/my-files\", // Retalive to the app root (i.e. app/my-files)\n    \"ftp\": {\n        \"protocol\": \"ftp\", // See app/src/Services/Ftp/Services/Constants.php for supported protocols list.\n        \"host\": \"xxxxxxx\",\n        \"port\": 21, // If not set the default would be 21\n        \"username\": \"xxxxxxx\",\n        \"password\": \"xxxxxxx\",\n        \"remotePath\": \"\" // Retalive to your host root. If blank the system will use the value of FTP_PATH in .env file if set or default to host root instead\n    }\n}\n\n ```\n\n## ðŸ’¡Useful links\n\n[Get started documentation](https://github.com/samirify/ftp-hex?tab=readme-ov-file)\n\n[Repo full documentation](https://github.com/samirify/ftp-hex/blob/main/app/README.md)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30346170"
	},
	"item": [
		{
			"name": "Upload files",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/upload-files",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"upload-files"
					]
				},
				"description": "#### **Upload files from Postman:**\n\nYou could use the Upload files endpoind and post files directly from the Body > form-data section.\n\n#### **Upload a whole folder:**\n\nJust set the files_path to '/your-folder-name'\n\nThis currently works for folders located inside the applications' app folder, as it'll look for relative folders inside the Docker root!\n\nAnother way, would be to use HTML form (see the app/uploader/index.html file) and then the system will extract the folder name from the $_FILES' object full_path.\n\n```\n{\n    \"files_path\": \"/my-files\", // Retalive to the app root (i.e. app/my-files)\n    \"ftp\": {\n        \"protocol\": \"ftp\", // See app/src/Services/Ftp/Services/Constants.php for supported protocols list.\n        \"host\": \"xxxxxxx\",\n        \"port\": 21, // If not set the default would be 21\n        \"username\": \"xxxxxxx\",\n        \"password\": \"xxxxxxx\",\n        \"remotePath\": \"\" // Retalive to your host root. If blank the system will use the value of FTP_PATH in .env file if set or default to host root instead\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Init",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/init",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"init"
					]
				},
				"description": "This's an endpoint which will return the configuration saved in .env file for use with the Uploader UI.\n\nIt's a simple GET request that you could test by clicking the init > Send button"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8091"
		}
	]
}